// Generated by Dagger (https://dagger.dev).
package com.app.motus_finance.domain.usecases;

import com.app.motus_finance.data.repositories.RepositoriesMarket;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MarketUseCase_Factory implements Factory<MarketUseCase> {
  private final Provider<RepositoriesMarket> repositoriesBankProvider;

  public MarketUseCase_Factory(Provider<RepositoriesMarket> repositoriesBankProvider) {
    this.repositoriesBankProvider = repositoriesBankProvider;
  }

  @Override
  public MarketUseCase get() {
    return newInstance(repositoriesBankProvider.get());
  }

  public static MarketUseCase_Factory create(
      Provider<RepositoriesMarket> repositoriesBankProvider) {
    return new MarketUseCase_Factory(repositoriesBankProvider);
  }

  public static MarketUseCase newInstance(RepositoriesMarket repositoriesBank) {
    return new MarketUseCase(repositoriesBank);
  }
}
